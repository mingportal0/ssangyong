/**
 * @Class Name : CodeDao.java
 * @Description : 
 * @Modification Information
 * @
 * @  수정일      수정자              수정내용
 * @ ---------   ---------   -------------------------------
 * @ 2019. 7. 3.           최초생성
 *
 * @author 개발프레임웍크 실행환경 개발팀
 * @since 2019. 7. 3. 
 * @version 1.0
 * @see
 *
 *  Copyright (C) by H.R. KIM All right reserved.
 */
package com.zim.code;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;

import com.zim.cmn.ConnectionMaker;
import com.zim.cmn.DTO;
import com.zim.cmn.JDBCReturnReso;
import com.zim.cmn.WorkDiv;


/**
 * @author sist
 *
 */
public class CodeDao implements WorkDiv {

	private final Logger LOG = Logger.getLogger(CodeDao.class);
	private ConnectionMaker connectionmaker;
	
	public CodeDao(){
		connectionmaker = new ConnectionMaker();
	}
	/* (non-Javadoc)
	 * @see com.hr.cmn.WorkDiv#do_insert(com.hr.cmn.DTO)
	 */
	@Override
	public int do_insert(DTO dto) {
		// TODO Auto-generated method stub
		return 0;
	}

	/* (non-Javadoc)
	 * @see com.hr.cmn.WorkDiv#do_update(com.hr.cmn.DTO)
	 */
	@Override
	public int do_update(DTO dto) {
		// TODO Auto-generated method stub
		return 0;
	}

	/* (non-Javadoc)
	 * @see com.hr.cmn.WorkDiv#do_delete(com.hr.cmn.DTO)
	 */
	@Override
	public int do_delete(DTO dto) {
		// TODO Auto-generated method stub
		return 0;
	}

	/* (non-Javadoc)
	 * @see com.hr.cmn.WorkDiv#do_selectOne(com.hr.cmn.DTO)
	 */
	@Override
	public DTO do_selectOne(DTO dto) {
		// TODO Auto-generated method stub
		return null;
	}

	/* (non-Javadoc)
	 * @see com.hr.cmn.WorkDiv#do_retrieve(com.hr.cmn.DTO)
	 */
	@Override
	public List<?> do_retrieve(DTO dto) {
		CodeVO vo = (CodeVO) dto;
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		
		List<CodeVO> list = new ArrayList<>();
		
		try{
			StringBuilder sb = new StringBuilder();
			sb.append(" SELECT b.code_id,                   \n");
			sb.append("        b.code_nm                    \n");
			sb.append(" FROM code_type A JOIN code B        \n");
			sb.append(" ON a.code_type_id = b.code_type_id  \n");
			sb.append(" WHERE b.code_type_id = ?            \n");
			sb.append(" AND b.use_yn =1                     \n");
			sb.append(" ORDER BY b.num                      \n");
			
			LOG.debug("1.========================");
			LOG.debug("1.query\n"+sb.toString());
			LOG.debug("1.========================");
			
			conn = connectionmaker.getConnection();
			pstmt = conn.prepareStatement(sb.toString());
			
			pstmt.setString(1, vo.getCodeTypeId());
			LOG.debug("2.========================");
			LOG.debug("2.query\n"+sb.toString());
			LOG.debug("2.========================");
			
			rs = pstmt.executeQuery();
			while(rs.next()){
				CodeVO outVO = new CodeVO();
				
				outVO.setCodeId(rs.getString("code_id"));
				outVO.setCodeNm(rs.getString("code_nm"));			
				
				list.add(outVO);
			}
		}catch(SQLException e){
			
		}finally{
			JDBCReturnReso.close(rs);
			JDBCReturnReso.close(pstmt);
			JDBCReturnReso.close(conn);
		}
		return list;
	}

}
