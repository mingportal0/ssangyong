package com.zim.cmn;

import java.util.List;

import org.apache.commons.lang3.StringEscapeUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.log4j.Logger;

import com.zim.code.CodeVO;
import com.zim.cmn.StringUtil;


public class StringUtil {
    private static Logger LOG = Logger.getLogger(StringUtil.class);
	
    /**
     * 
     * @Method Name  : renderPaing
     * @작성일   : 2019. 7. 24.
     * @작성자   : SIST
     * @변경이력  : 최초작성
     * @Method 설명 :
     * @param maxNum:총글수
     * @param currPageNo: 현재페이지
     * @param rowPerPage:한페이지에 보여질 글수
     * @param bottomCount:바닥에 보여질 페이지수
     * @param url:호출url
     * @param scriptName:호출 javascript	
     * @return
     */
    public static String renderPaing(int maxNum,int currPageNo,int rowPerPage,int bottomCount
            ,String url, String scriptName){
         /*  총글수 : 21 
          *  현재페이지                   1
           총글수                       0
           바닥에 보여질 페이지수          10 
           한페이지에 보여질 글수          10 
           호출url         
           호출 javascript
           << < 1 2 3 4 5 6 7 8 9 10 > >>
           총글수 : 21,1
          */
         int maxPageNo  = ((maxNum-1)/rowPerPage)+1;//총페이지
         int startPaeNo = ((currPageNo-1)/bottomCount) * bottomCount+1;
         int endPageNo  = ((currPageNo-1)/bottomCount+1)*bottomCount;
         int nowBlockNo = ((currPageNo-1)/bottomCount)+1;
         int maxBlockNo = ((maxNum-1)/bottomCount)+1;
         
         int inx  = 0;
         StringBuilder html=new StringBuilder();
         if(currPageNo>maxPageNo){
            return "";
         }
         
         //<table><tr><td></td></tr></table>
//         html.append("<table border=\"0\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\"     >\n");
//         html.append("<tr> \n");
//         html.append("<td align=\"center\"> \n"); 
         
         html.append("<nav class=\"text-center\">\n"); 
         html.append("   <ul class=\"pagination\">\n"); 
         html.append("      <li>\n"); 
         

         //paging-------------------
         
//         <a href="#" aria-label="Previous">
//        <span aria-hidden="true">&laquo;</span>
//        </a>
         //<< &laquo;   왼쪽 꺾인 괄호
         html.append("         <li>\n");
         if(nowBlockNo>1 && nowBlockNo <=maxBlockNo){
            html.append("<a  aria-label=\"Previous\" href=\"javascript:"+scriptName+"('"+url+"',1);\"  > ");
            html.append("<span aria-hidden=\"true\">&laquo;</span>");
            html.append("</a> \n");
         }
         //<
         if(startPaeNo>bottomCount){
            html.append("<a  href=\"javascript:"+scriptName+"('"+url+"',"+(startPaeNo-1)+");\"  > ");
            html.append("< ");
            html.append("</a> \n");          
         }
         html.append("         </li>\n");
         //1 2  .... 10 <li><a href="#">1</a></li>
         for(inx = startPaeNo;inx<=maxPageNo && inx<=endPageNo;inx++){
            if( inx == currPageNo){//현재 page
               html.append("            <li><a>"+inx+"</a></li> &nbsp;&nbsp;\n");
            }else{
                html.append("            <li><a  href=\"javascript:"+scriptName+"('"+url+"',"+inx+");\"  > ");
                html.append(inx);
                html.append("</a></li>&nbsp;&nbsp; \n");                    
            }
         
         }
         html.append("         <li>\n");
         //>
         if(maxPageNo>=inx){
            html.append("            <a  aria-label=\"Next\" href=\"javascript:"+scriptName+"('"+url+"',"+((nowBlockNo*bottomCount)+1)+");\"  > ");
            html.append("> ");
            html.append("</a> \n");           
         }
         //>> &raquo;   오른쪽 꺾인 괄호
         if(maxPageNo >=inx){
            html.append("            <a  aria-label=\"Next\" href=\"javascript:"+scriptName+"('"+url+"',"+maxPageNo+");\"  > ");
            html.append("<span aria-hidden=\"true\">&raquo;</span>");
            html.append("</a> \n");
         }
         html.append("         </li>\n");

         //--paging-----------------
//         html.append("</td> \n");
//         html.append("</tr> \n");
//         html.append("</table>");
         
         html.append("      </li>\n");
         html.append("   </ul>\n");
         html.append("</nav>\n");
//        </li>
  //   </ul>
  //</nav>
         
         LOG.debug("===========================");
         LOG.debug("html.toString()=\n"+html.toString());
         LOG.debug("===========================");
         return html.toString();
      }
    
    
    
    /**
     * 
     * @Method Name  : makeSelectBox
     * @작성일   : 2019. 7. 22.
     * @작성자   : SIST
     * @변경이력  : 최초작성
     * @Method 설명 :
     * @param list: select에 필용한 코드정보
     * @param selectBoxNm : <select name="lvl" id="lvl">
     * @param selectedNm  : <option selected
     * @param allYN       : 전체 표시 
     * @return            : <select name="lvl" id="lvl">
     * 						  <option value="">전체</option>
    			              <option value="1" selected>일반사용자</option>
    			              <option value="9">관리자</option>
    		                </select>
     */
	public static String makeSelectBox(List<CodeVO> list,
			                           String selectBoxNm,
			                           String selectedNm,
			                           boolean allYN){
		StringBuilder sb=new StringBuilder();
		//<select name="lvl" id="lvl">
		sb.append("<select name='"+selectBoxNm+"' id='"+selectBoxNm+"' > \n");
		//전체
		if(allYN==true){
			sb.append("<option value=''>전체</option> \n");
		}
		
		//<option value="1" selected>일반사용자</option>
		for(CodeVO dto  :list){
			CodeVO vo =  dto;
			sb.append("\t<option value='"+vo.getCodeId()+"' ");
			if(selectedNm.equals(vo.getCodeId())){
				sb.append("selected='selected' ");
			}
			
			sb.append(">");
			sb.append(vo.getCodeNm());
			sb.append("</option>\n");
		}
		sb.append("</select> \n");
		LOG.debug("------------------------");
		LOG.debug(sb.toString());
		LOG.debug("------------------------");
		return sb.toString();
	}
	
	
	
	
	public static String nvl(String str, String defVal){
		
		String retStr = "";
		if(StringUtils.isEmpty(str)){//apache.commons null
			retStr = defVal.trim();
		}else{
			retStr = str.toString().trim();
		}
		
//		if(null == str || str.equals("")){
//			retStr = defVal;
//		}else{
//			retStr = str.toString().trim();
//		}
		
		return retStr;
	}
	
	public static String escapeHtml(String html){
		return StringEscapeUtils.escapeHtml4(html);
	}
}
