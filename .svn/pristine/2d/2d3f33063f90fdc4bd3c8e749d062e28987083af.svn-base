package com.zim.product.listall;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;

import com.zim.cmn.StringUtil;
import com.zim.product.ProductDao;
import com.zim.product.ProductVO;

/**
 * Servlet implementation class ListAllController
 */
@WebServlet(description = "전체카테고리", urlPatterns = { "/listall/listall.do" })
public class ListAllController extends HttpServlet {
	private final Logger LOG=Logger.getLogger(ProductDao.class);
	private ListAllService service;
	private static final long serialVersionUID = 1L;
	  
	public ListAllController() {
		service = new ListAllService();
	}

    public void do_totalCategory_select(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException{
    	LOG.debug("03.1 do_totalCategory_select");
    	ProductVO inVO = new ProductVO();
    	
    	String[] checkbox = request.getParameterValues("category");
    	String category="";
		if(null != checkbox){
			for(int i=0;i<checkbox.length;i++){
				if(checkbox.length-1 != i){
					category = category+checkbox[i]+",";
				}else{
					category = category+checkbox[i];
				}			
			}
		}

		
		ListAllSearchVO searchVO = new ListAllSearchVO();
    	//검색조건
    	String pageSize = StringUtil.nvl(request.getParameter("page_size"),"12");
    	String pageNum = StringUtil.nvl(request.getParameter("page_num"),"1");
    	searchVO.setCategory(category);
    	searchVO.setPageSize(Integer.parseInt(pageSize));
    	searchVO.setPageNum(Integer.parseInt(pageNum));

   	
    	LOG.debug("03.2 inVO:"+searchVO);
    	List<ProductVO> categoryAllList = (List<ProductVO>) this.service.do_totalCategory_select(searchVO);
    	LOG.debug("--------------------");
    	for(ProductVO vo:categoryAllList){
    		LOG.debug(vo);
    	}
    	LOG.debug("--------------------");
    	int talCnt = 0;
    	//총 글수
    	if(null != categoryAllList && categoryAllList.size()>0){
    		ProductVO totalVO = categoryAllList.get(0);
    		talCnt = totalVO.getTotal();
    	}
    	request.setAttribute("talCnt", talCnt);
    	request.setAttribute("categoryAllList", categoryAllList);
    	request.setAttribute("searchVO", searchVO);		
		
		
		
    	request.setAttribute("category", category);
    	RequestDispatcher dispatcher = request.getRequestDispatcher("/product/listall_view.jsp");
    	dispatcher.forward(request, response);

    	
   	}

    public void doServiceHandler(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException{
    	//기능 : do_retrieve, do_insert, do_update, do_selectOne, do_delete
    	//work_div
    	LOG.debug("02 doServiceHandler()");
    	request.setCharacterEncoding("UTF-8"); 	//리퀘스트 설정하기
    	
    	
    	//work_div : read
    	String workDiv = StringUtil.nvl(request.getParameter("work_div"), "");
    	LOG.debug("02.1 workDiv:"+workDiv);
    	
    	
    	//Switch문으로 분기처리
    	switch(workDiv){
    		case "do_totalCategory_select":
    			do_totalCategory_select(request,response);
    			break;
    	}
    }
    	
    	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doServiceHandler(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doServiceHandler(request, response);
	}

}
